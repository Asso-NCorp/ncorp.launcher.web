/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LanguageIdentityOrValue } from './LanguageIdentityOrValue';
import {
    LanguageIdentityOrValueFromJSON,
    LanguageIdentityOrValueFromJSONTyped,
    LanguageIdentityOrValueToJSON,
    LanguageIdentityOrValueToJSONTyped,
} from './LanguageIdentityOrValue';
import type { LanguageSupportTypeIdentityOrValue } from './LanguageSupportTypeIdentityOrValue';
import {
    LanguageSupportTypeIdentityOrValueFromJSON,
    LanguageSupportTypeIdentityOrValueFromJSONTyped,
    LanguageSupportTypeIdentityOrValueToJSON,
    LanguageSupportTypeIdentityOrValueToJSONTyped,
} from './LanguageSupportTypeIdentityOrValue';
import type { GameIdentityOrValue } from './GameIdentityOrValue';
import {
    GameIdentityOrValueFromJSON,
    GameIdentityOrValueFromJSONTyped,
    GameIdentityOrValueToJSON,
    GameIdentityOrValueToJSONTyped,
} from './GameIdentityOrValue';

/**
 * 
 * @export
 * @interface LanguageSupport
 */
export interface LanguageSupport {
    /**
     * 
     * @type {string}
     * @memberof LanguageSupport
     */
    checksum?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof LanguageSupport
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof LanguageSupport
     */
    id?: number | null;
    /**
     * 
     * @type {GameIdentityOrValue}
     * @memberof LanguageSupport
     */
    game?: GameIdentityOrValue | null;
    /**
     * 
     * @type {LanguageIdentityOrValue}
     * @memberof LanguageSupport
     */
    language?: LanguageIdentityOrValue | null;
    /**
     * 
     * @type {LanguageSupportTypeIdentityOrValue}
     * @memberof LanguageSupport
     */
    languageSupportType?: LanguageSupportTypeIdentityOrValue | null;
    /**
     * 
     * @type {Date}
     * @memberof LanguageSupport
     */
    updatedAt?: Date | null;
}

/**
 * Check if a given object implements the LanguageSupport interface.
 */
export function instanceOfLanguageSupport(value: object): value is LanguageSupport {
    return true;
}

export function LanguageSupportFromJSON(json: any): LanguageSupport {
    return LanguageSupportFromJSONTyped(json, false);
}

export function LanguageSupportFromJSONTyped(json: any, ignoreDiscriminator: boolean): LanguageSupport {
    if (json == null) {
        return json;
    }
    return {
        
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'id': json['id'] == null ? undefined : json['id'],
        'game': json['game'] == null ? undefined : GameIdentityOrValueFromJSON(json['game']),
        'language': json['language'] == null ? undefined : LanguageIdentityOrValueFromJSON(json['language']),
        'languageSupportType': json['languageSupportType'] == null ? undefined : LanguageSupportTypeIdentityOrValueFromJSON(json['languageSupportType']),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function LanguageSupportToJSON(json: any): LanguageSupport {
    return LanguageSupportToJSONTyped(json, false);
}

export function LanguageSupportToJSONTyped(value?: LanguageSupport | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'checksum': value['checksum'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'id': value['id'],
        'game': GameIdentityOrValueToJSON(value['game']),
        'language': LanguageIdentityOrValueToJSON(value['language']),
        'languageSupportType': LanguageSupportTypeIdentityOrValueToJSON(value['languageSupportType']),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
    };
}

