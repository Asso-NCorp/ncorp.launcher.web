/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlatformLogoIdentityOrValue } from './PlatformLogoIdentityOrValue';
import {
    PlatformLogoIdentityOrValueFromJSON,
    PlatformLogoIdentityOrValueFromJSONTyped,
    PlatformLogoIdentityOrValueToJSON,
    PlatformLogoIdentityOrValueToJSONTyped,
} from './PlatformLogoIdentityOrValue';
import type { PlatformVersionCompanyIdentityOrValue } from './PlatformVersionCompanyIdentityOrValue';
import {
    PlatformVersionCompanyIdentityOrValueFromJSON,
    PlatformVersionCompanyIdentityOrValueFromJSONTyped,
    PlatformVersionCompanyIdentityOrValueToJSON,
    PlatformVersionCompanyIdentityOrValueToJSONTyped,
} from './PlatformVersionCompanyIdentityOrValue';
import type { PlatformVersionCompanyIdentitiesOrValues } from './PlatformVersionCompanyIdentitiesOrValues';
import {
    PlatformVersionCompanyIdentitiesOrValuesFromJSON,
    PlatformVersionCompanyIdentitiesOrValuesFromJSONTyped,
    PlatformVersionCompanyIdentitiesOrValuesToJSON,
    PlatformVersionCompanyIdentitiesOrValuesToJSONTyped,
} from './PlatformVersionCompanyIdentitiesOrValues';
import type { PlatformVersionReleaseDateIdentitiesOrValues } from './PlatformVersionReleaseDateIdentitiesOrValues';
import {
    PlatformVersionReleaseDateIdentitiesOrValuesFromJSON,
    PlatformVersionReleaseDateIdentitiesOrValuesFromJSONTyped,
    PlatformVersionReleaseDateIdentitiesOrValuesToJSON,
    PlatformVersionReleaseDateIdentitiesOrValuesToJSONTyped,
} from './PlatformVersionReleaseDateIdentitiesOrValues';

/**
 * 
 * @export
 * @interface PlatformVersion
 */
export interface PlatformVersion {
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    checksum?: string | null;
    /**
     * 
     * @type {PlatformVersionCompanyIdentitiesOrValues}
     * @memberof PlatformVersion
     */
    companies?: PlatformVersionCompanyIdentitiesOrValues | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    connectivity?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    cpu?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    graphics?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PlatformVersion
     */
    id?: number | null;
    /**
     * 
     * @type {PlatformVersionCompanyIdentityOrValue}
     * @memberof PlatformVersion
     */
    mainManufacturer?: PlatformVersionCompanyIdentityOrValue | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    media?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    memory?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    os?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    output?: string | null;
    /**
     * 
     * @type {PlatformLogoIdentityOrValue}
     * @memberof PlatformVersion
     */
    platformLogo?: PlatformLogoIdentityOrValue | null;
    /**
     * 
     * @type {PlatformVersionReleaseDateIdentitiesOrValues}
     * @memberof PlatformVersion
     */
    platformVersionReleaseDates?: PlatformVersionReleaseDateIdentitiesOrValues | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    resolutions?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    slug?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    sound?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    storage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    summary?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersion
     */
    url?: string | null;
}

/**
 * Check if a given object implements the PlatformVersion interface.
 */
export function instanceOfPlatformVersion(value: object): value is PlatformVersion {
    return true;
}

export function PlatformVersionFromJSON(json: any): PlatformVersion {
    return PlatformVersionFromJSONTyped(json, false);
}

export function PlatformVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformVersion {
    if (json == null) {
        return json;
    }
    return {
        
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'companies': json['companies'] == null ? undefined : PlatformVersionCompanyIdentitiesOrValuesFromJSON(json['companies']),
        'connectivity': json['connectivity'] == null ? undefined : json['connectivity'],
        'cpu': json['cpu'] == null ? undefined : json['cpu'],
        'graphics': json['graphics'] == null ? undefined : json['graphics'],
        'id': json['id'] == null ? undefined : json['id'],
        'mainManufacturer': json['mainManufacturer'] == null ? undefined : PlatformVersionCompanyIdentityOrValueFromJSON(json['mainManufacturer']),
        'media': json['media'] == null ? undefined : json['media'],
        'memory': json['memory'] == null ? undefined : json['memory'],
        'name': json['name'] == null ? undefined : json['name'],
        'os': json['os'] == null ? undefined : json['os'],
        'output': json['output'] == null ? undefined : json['output'],
        'platformLogo': json['platformLogo'] == null ? undefined : PlatformLogoIdentityOrValueFromJSON(json['platformLogo']),
        'platformVersionReleaseDates': json['platformVersionReleaseDates'] == null ? undefined : PlatformVersionReleaseDateIdentitiesOrValuesFromJSON(json['platformVersionReleaseDates']),
        'resolutions': json['resolutions'] == null ? undefined : json['resolutions'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'sound': json['sound'] == null ? undefined : json['sound'],
        'storage': json['storage'] == null ? undefined : json['storage'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function PlatformVersionToJSON(json: any): PlatformVersion {
    return PlatformVersionToJSONTyped(json, false);
}

export function PlatformVersionToJSONTyped(value?: PlatformVersion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'checksum': value['checksum'],
        'companies': PlatformVersionCompanyIdentitiesOrValuesToJSON(value['companies']),
        'connectivity': value['connectivity'],
        'cpu': value['cpu'],
        'graphics': value['graphics'],
        'id': value['id'],
        'mainManufacturer': PlatformVersionCompanyIdentityOrValueToJSON(value['mainManufacturer']),
        'media': value['media'],
        'memory': value['memory'],
        'name': value['name'],
        'os': value['os'],
        'output': value['output'],
        'platformLogo': PlatformLogoIdentityOrValueToJSON(value['platformLogo']),
        'platformVersionReleaseDates': PlatformVersionReleaseDateIdentitiesOrValuesToJSON(value['platformVersionReleaseDates']),
        'resolutions': value['resolutions'],
        'slug': value['slug'],
        'sound': value['sound'],
        'storage': value['storage'],
        'summary': value['summary'],
        'url': value['url'],
    };
}

