/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReactionViewDto } from './ReactionViewDto';
import {
    ReactionViewDtoFromJSON,
    ReactionViewDtoFromJSONTyped,
    ReactionViewDtoToJSON,
    ReactionViewDtoToJSONTyped,
} from './ReactionViewDto';
import type { MessageType } from './MessageType';
import {
    MessageTypeFromJSON,
    MessageTypeFromJSONTyped,
    MessageTypeToJSON,
    MessageTypeToJSONTyped,
} from './MessageType';

/**
 * 
 * @export
 * @interface MessageDto
 */
export interface MessageDto {
    /**
     * 
     * @type {string}
     * @memberof MessageDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageDto
     */
    roomId?: string;
    /**
     * 
     * @type {string}
     * @memberof MessageDto
     */
    authorId?: string;
    /**
     * 
     * @type {MessageType}
     * @memberof MessageDto
     */
    type?: MessageType;
    /**
     * 
     * @type {string}
     * @memberof MessageDto
     */
    content?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MessageDto
     */
    attachments?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof MessageDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof MessageDto
     */
    editedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof MessageDto
     */
    deletedAt?: Date | null;
    /**
     * 
     * @type {Array<ReactionViewDto>}
     * @memberof MessageDto
     */
    reactions?: Array<ReactionViewDto> | null;
}



/**
 * Check if a given object implements the MessageDto interface.
 */
export function instanceOfMessageDto(value: object): value is MessageDto {
    return true;
}

export function MessageDtoFromJSON(json: any): MessageDto {
    return MessageDtoFromJSONTyped(json, false);
}

export function MessageDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'roomId': json['roomId'] == null ? undefined : json['roomId'],
        'authorId': json['authorId'] == null ? undefined : json['authorId'],
        'type': json['type'] == null ? undefined : MessageTypeFromJSON(json['type']),
        'content': json['content'] == null ? undefined : json['content'],
        'attachments': json['attachments'] == null ? undefined : json['attachments'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'editedAt': json['editedAt'] == null ? undefined : (new Date(json['editedAt'])),
        'deletedAt': json['deletedAt'] == null ? undefined : (new Date(json['deletedAt'])),
        'reactions': json['reactions'] == null ? undefined : ((json['reactions'] as Array<any>).map(ReactionViewDtoFromJSON)),
    };
}

export function MessageDtoToJSON(json: any): MessageDto {
    return MessageDtoToJSONTyped(json, false);
}

export function MessageDtoToJSONTyped(value?: MessageDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'roomId': value['roomId'],
        'authorId': value['authorId'],
        'type': MessageTypeToJSON(value['type']),
        'content': value['content'],
        'attachments': value['attachments'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'editedAt': value['editedAt'] == null ? undefined : ((value['editedAt'] as any).toISOString()),
        'deletedAt': value['deletedAt'] == null ? undefined : ((value['deletedAt'] as any).toISOString()),
        'reactions': value['reactions'] == null ? undefined : ((value['reactions'] as Array<any>).map(ReactionViewDtoToJSON)),
    };
}

