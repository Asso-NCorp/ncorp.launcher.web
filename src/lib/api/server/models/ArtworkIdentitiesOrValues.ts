/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Artwork } from './Artwork';
import {
    ArtworkFromJSON,
    ArtworkFromJSONTyped,
    ArtworkToJSON,
    ArtworkToJSONTyped,
} from './Artwork';

/**
 * 
 * @export
 * @interface ArtworkIdentitiesOrValues
 */
export interface ArtworkIdentitiesOrValues {
    /**
     * 
     * @type {Array<number>}
     * @memberof ArtworkIdentitiesOrValues
     */
    readonly ids?: Array<number> | null;
    /**
     * 
     * @type {Array<Artwork>}
     * @memberof ArtworkIdentitiesOrValues
     */
    readonly values?: Array<Artwork> | null;
}

/**
 * Check if a given object implements the ArtworkIdentitiesOrValues interface.
 */
export function instanceOfArtworkIdentitiesOrValues(value: object): value is ArtworkIdentitiesOrValues {
    return true;
}

export function ArtworkIdentitiesOrValuesFromJSON(json: any): ArtworkIdentitiesOrValues {
    return ArtworkIdentitiesOrValuesFromJSONTyped(json, false);
}

export function ArtworkIdentitiesOrValuesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArtworkIdentitiesOrValues {
    if (json == null) {
        return json;
    }
    return {
        
        'ids': json['ids'] == null ? undefined : json['ids'],
        'values': json['values'] == null ? undefined : ((json['values'] as Array<any>).map(ArtworkFromJSON)),
    };
}

export function ArtworkIdentitiesOrValuesToJSON(json: any): ArtworkIdentitiesOrValues {
    return ArtworkIdentitiesOrValuesToJSONTyped(json, false);
}

export function ArtworkIdentitiesOrValuesToJSONTyped(value?: Omit<ArtworkIdentitiesOrValues, 'ids'|'values'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

