/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameIdentityOrValue } from './GameIdentityOrValue';
import {
    GameIdentityOrValueFromJSON,
    GameIdentityOrValueFromJSONTyped,
    GameIdentityOrValueToJSON,
    GameIdentityOrValueToJSONTyped,
} from './GameIdentityOrValue';

/**
 * 
 * @export
 * @interface AlternativeName
 */
export interface AlternativeName {
    /**
     * 
     * @type {string}
     * @memberof AlternativeName
     */
    checksum?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AlternativeName
     */
    comment?: string | null;
    /**
     * 
     * @type {GameIdentityOrValue}
     * @memberof AlternativeName
     */
    game?: GameIdentityOrValue | null;
    /**
     * 
     * @type {number}
     * @memberof AlternativeName
     */
    id?: number | null;
    /**
     * 
     * @type {string}
     * @memberof AlternativeName
     */
    name?: string | null;
}

/**
 * Check if a given object implements the AlternativeName interface.
 */
export function instanceOfAlternativeName(value: object): value is AlternativeName {
    return true;
}

export function AlternativeNameFromJSON(json: any): AlternativeName {
    return AlternativeNameFromJSONTyped(json, false);
}

export function AlternativeNameFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlternativeName {
    if (json == null) {
        return json;
    }
    return {
        
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'game': json['game'] == null ? undefined : GameIdentityOrValueFromJSON(json['game']),
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function AlternativeNameToJSON(json: any): AlternativeName {
    return AlternativeNameToJSONTyped(json, false);
}

export function AlternativeNameToJSONTyped(value?: AlternativeName | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'checksum': value['checksum'],
        'comment': value['comment'],
        'game': GameIdentityOrValueToJSON(value['game']),
        'id': value['id'],
        'name': value['name'],
    };
}

