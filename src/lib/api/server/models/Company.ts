/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GameIdentitiesOrValues } from './GameIdentitiesOrValues';
import {
    GameIdentitiesOrValuesFromJSON,
    GameIdentitiesOrValuesFromJSONTyped,
    GameIdentitiesOrValuesToJSON,
    GameIdentitiesOrValuesToJSONTyped,
} from './GameIdentitiesOrValues';
import type { CompanyLogoIdentityOrValue } from './CompanyLogoIdentityOrValue';
import {
    CompanyLogoIdentityOrValueFromJSON,
    CompanyLogoIdentityOrValueFromJSONTyped,
    CompanyLogoIdentityOrValueToJSON,
    CompanyLogoIdentityOrValueToJSONTyped,
} from './CompanyLogoIdentityOrValue';
import type { StartDateCategory } from './StartDateCategory';
import {
    StartDateCategoryFromJSON,
    StartDateCategoryFromJSONTyped,
    StartDateCategoryToJSON,
    StartDateCategoryToJSONTyped,
} from './StartDateCategory';
import type { CompanyIdentityOrValue } from './CompanyIdentityOrValue';
import {
    CompanyIdentityOrValueFromJSON,
    CompanyIdentityOrValueFromJSONTyped,
    CompanyIdentityOrValueToJSON,
    CompanyIdentityOrValueToJSONTyped,
} from './CompanyIdentityOrValue';
import type { ChangeDateCategory } from './ChangeDateCategory';
import {
    ChangeDateCategoryFromJSON,
    ChangeDateCategoryFromJSONTyped,
    ChangeDateCategoryToJSON,
    ChangeDateCategoryToJSONTyped,
} from './ChangeDateCategory';
import type { CompanyWebsiteIdentitiesOrValues } from './CompanyWebsiteIdentitiesOrValues';
import {
    CompanyWebsiteIdentitiesOrValuesFromJSON,
    CompanyWebsiteIdentitiesOrValuesFromJSONTyped,
    CompanyWebsiteIdentitiesOrValuesToJSON,
    CompanyWebsiteIdentitiesOrValuesToJSONTyped,
} from './CompanyWebsiteIdentitiesOrValues';

/**
 * 
 * @export
 * @interface Company
 */
export interface Company {
    /**
     * 
     * @type {Date}
     * @memberof Company
     */
    changeDate?: Date | null;
    /**
     * 
     * @type {ChangeDateCategory}
     * @memberof Company
     */
    changeDateCategory?: ChangeDateCategory;
    /**
     * 
     * @type {CompanyIdentityOrValue}
     * @memberof Company
     */
    changedCompanyId?: CompanyIdentityOrValue | null;
    /**
     * 
     * @type {string}
     * @memberof Company
     */
    checksum?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Company
     */
    country?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof Company
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Company
     */
    description?: string | null;
    /**
     * 
     * @type {GameIdentitiesOrValues}
     * @memberof Company
     */
    developed?: GameIdentitiesOrValues | null;
    /**
     * 
     * @type {number}
     * @memberof Company
     */
    id?: number | null;
    /**
     * 
     * @type {CompanyLogoIdentityOrValue}
     * @memberof Company
     */
    logo?: CompanyLogoIdentityOrValue | null;
    /**
     * 
     * @type {string}
     * @memberof Company
     */
    name?: string | null;
    /**
     * 
     * @type {CompanyIdentityOrValue}
     * @memberof Company
     */
    parent?: CompanyIdentityOrValue | null;
    /**
     * 
     * @type {GameIdentitiesOrValues}
     * @memberof Company
     */
    published?: GameIdentitiesOrValues | null;
    /**
     * 
     * @type {string}
     * @memberof Company
     */
    slug?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Company
     */
    startDate?: Date | null;
    /**
     * 
     * @type {StartDateCategory}
     * @memberof Company
     */
    startDateCategory?: StartDateCategory | null;
    /**
     * 
     * @type {Date}
     * @memberof Company
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Company
     */
    url?: string | null;
    /**
     * 
     * @type {CompanyWebsiteIdentitiesOrValues}
     * @memberof Company
     */
    websites?: CompanyWebsiteIdentitiesOrValues | null;
}



/**
 * Check if a given object implements the Company interface.
 */
export function instanceOfCompany(value: object): value is Company {
    return true;
}

export function CompanyFromJSON(json: any): Company {
    return CompanyFromJSONTyped(json, false);
}

export function CompanyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Company {
    if (json == null) {
        return json;
    }
    return {
        
        'changeDate': json['changeDate'] == null ? undefined : (new Date(json['changeDate'])),
        'changeDateCategory': json['changeDateCategory'] == null ? undefined : ChangeDateCategoryFromJSON(json['changeDateCategory']),
        'changedCompanyId': json['changedCompanyId'] == null ? undefined : CompanyIdentityOrValueFromJSON(json['changedCompanyId']),
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'country': json['country'] == null ? undefined : json['country'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'description': json['description'] == null ? undefined : json['description'],
        'developed': json['developed'] == null ? undefined : GameIdentitiesOrValuesFromJSON(json['developed']),
        'id': json['id'] == null ? undefined : json['id'],
        'logo': json['logo'] == null ? undefined : CompanyLogoIdentityOrValueFromJSON(json['logo']),
        'name': json['name'] == null ? undefined : json['name'],
        'parent': json['parent'] == null ? undefined : CompanyIdentityOrValueFromJSON(json['parent']),
        'published': json['published'] == null ? undefined : GameIdentitiesOrValuesFromJSON(json['published']),
        'slug': json['slug'] == null ? undefined : json['slug'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'startDateCategory': json['startDateCategory'] == null ? undefined : StartDateCategoryFromJSON(json['startDateCategory']),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'url': json['url'] == null ? undefined : json['url'],
        'websites': json['websites'] == null ? undefined : CompanyWebsiteIdentitiesOrValuesFromJSON(json['websites']),
    };
}

export function CompanyToJSON(json: any): Company {
    return CompanyToJSONTyped(json, false);
}

export function CompanyToJSONTyped(value?: Company | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'changeDate': value['changeDate'] == null ? undefined : ((value['changeDate'] as any).toISOString()),
        'changeDateCategory': ChangeDateCategoryToJSON(value['changeDateCategory']),
        'changedCompanyId': CompanyIdentityOrValueToJSON(value['changedCompanyId']),
        'checksum': value['checksum'],
        'country': value['country'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'description': value['description'],
        'developed': GameIdentitiesOrValuesToJSON(value['developed']),
        'id': value['id'],
        'logo': CompanyLogoIdentityOrValueToJSON(value['logo']),
        'name': value['name'],
        'parent': CompanyIdentityOrValueToJSON(value['parent']),
        'published': GameIdentitiesOrValuesToJSON(value['published']),
        'slug': value['slug'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate'] as any).toISOString()),
        'startDateCategory': StartDateCategoryToJSON(value['startDateCategory']),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
        'url': value['url'],
        'websites': CompanyWebsiteIdentitiesOrValuesToJSON(value['websites']),
    };
}

