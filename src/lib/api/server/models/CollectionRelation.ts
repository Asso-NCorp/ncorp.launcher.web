/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CollectionRelationTypeIdentityOrValue } from './CollectionRelationTypeIdentityOrValue';
import {
    CollectionRelationTypeIdentityOrValueFromJSON,
    CollectionRelationTypeIdentityOrValueFromJSONTyped,
    CollectionRelationTypeIdentityOrValueToJSON,
    CollectionRelationTypeIdentityOrValueToJSONTyped,
} from './CollectionRelationTypeIdentityOrValue';
import type { CollectionIdentityOrValue } from './CollectionIdentityOrValue';
import {
    CollectionIdentityOrValueFromJSON,
    CollectionIdentityOrValueFromJSONTyped,
    CollectionIdentityOrValueToJSON,
    CollectionIdentityOrValueToJSONTyped,
} from './CollectionIdentityOrValue';

/**
 * 
 * @export
 * @interface CollectionRelation
 */
export interface CollectionRelation {
    /**
     * 
     * @type {string}
     * @memberof CollectionRelation
     */
    checksum?: string | null;
    /**
     * 
     * @type {CollectionIdentityOrValue}
     * @memberof CollectionRelation
     */
    childCollection?: CollectionIdentityOrValue | null;
    /**
     * 
     * @type {Date}
     * @memberof CollectionRelation
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof CollectionRelation
     */
    id?: number | null;
    /**
     * 
     * @type {CollectionIdentityOrValue}
     * @memberof CollectionRelation
     */
    parentCollection?: CollectionIdentityOrValue | null;
    /**
     * 
     * @type {CollectionRelationTypeIdentityOrValue}
     * @memberof CollectionRelation
     */
    type?: CollectionRelationTypeIdentityOrValue | null;
    /**
     * 
     * @type {Date}
     * @memberof CollectionRelation
     */
    updatedAt?: Date | null;
}

/**
 * Check if a given object implements the CollectionRelation interface.
 */
export function instanceOfCollectionRelation(value: object): value is CollectionRelation {
    return true;
}

export function CollectionRelationFromJSON(json: any): CollectionRelation {
    return CollectionRelationFromJSONTyped(json, false);
}

export function CollectionRelationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CollectionRelation {
    if (json == null) {
        return json;
    }
    return {
        
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'childCollection': json['childCollection'] == null ? undefined : CollectionIdentityOrValueFromJSON(json['childCollection']),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'id': json['id'] == null ? undefined : json['id'],
        'parentCollection': json['parentCollection'] == null ? undefined : CollectionIdentityOrValueFromJSON(json['parentCollection']),
        'type': json['type'] == null ? undefined : CollectionRelationTypeIdentityOrValueFromJSON(json['type']),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function CollectionRelationToJSON(json: any): CollectionRelation {
    return CollectionRelationToJSONTyped(json, false);
}

export function CollectionRelationToJSONTyped(value?: CollectionRelation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'checksum': value['checksum'],
        'childCollection': CollectionIdentityOrValueToJSON(value['childCollection']),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'id': value['id'],
        'parentCollection': CollectionIdentityOrValueToJSON(value['parentCollection']),
        'type': CollectionRelationTypeIdentityOrValueToJSON(value['type']),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
    };
}

