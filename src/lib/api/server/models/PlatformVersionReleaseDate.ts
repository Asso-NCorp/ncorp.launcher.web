/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReleaseDateRegion } from './ReleaseDateRegion';
import {
    ReleaseDateRegionFromJSON,
    ReleaseDateRegionFromJSONTyped,
    ReleaseDateRegionToJSON,
    ReleaseDateRegionToJSONTyped,
} from './ReleaseDateRegion';
import type { ReleaseDateCategory } from './ReleaseDateCategory';
import {
    ReleaseDateCategoryFromJSON,
    ReleaseDateCategoryFromJSONTyped,
    ReleaseDateCategoryToJSON,
    ReleaseDateCategoryToJSONTyped,
} from './ReleaseDateCategory';
import type { PlatformVersionIdentityOrValue } from './PlatformVersionIdentityOrValue';
import {
    PlatformVersionIdentityOrValueFromJSON,
    PlatformVersionIdentityOrValueFromJSONTyped,
    PlatformVersionIdentityOrValueToJSON,
    PlatformVersionIdentityOrValueToJSONTyped,
} from './PlatformVersionIdentityOrValue';

/**
 * 
 * @export
 * @interface PlatformVersionReleaseDate
 */
export interface PlatformVersionReleaseDate {
    /**
     * 
     * @type {ReleaseDateCategory}
     * @memberof PlatformVersionReleaseDate
     */
    category?: ReleaseDateCategory | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersionReleaseDate
     */
    checksum?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof PlatformVersionReleaseDate
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PlatformVersionReleaseDate
     */
    date?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersionReleaseDate
     */
    human?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PlatformVersionReleaseDate
     */
    id?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PlatformVersionReleaseDate
     */
    month?: number | null;
    /**
     * 
     * @type {PlatformVersionIdentityOrValue}
     * @memberof PlatformVersionReleaseDate
     */
    platformVersion?: PlatformVersionIdentityOrValue | null;
    /**
     * 
     * @type {ReleaseDateRegion}
     * @memberof PlatformVersionReleaseDate
     */
    region?: ReleaseDateRegion | null;
    /**
     * 
     * @type {Date}
     * @memberof PlatformVersionReleaseDate
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof PlatformVersionReleaseDate
     */
    year?: number | null;
}



/**
 * Check if a given object implements the PlatformVersionReleaseDate interface.
 */
export function instanceOfPlatformVersionReleaseDate(value: object): value is PlatformVersionReleaseDate {
    return true;
}

export function PlatformVersionReleaseDateFromJSON(json: any): PlatformVersionReleaseDate {
    return PlatformVersionReleaseDateFromJSONTyped(json, false);
}

export function PlatformVersionReleaseDateFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformVersionReleaseDate {
    if (json == null) {
        return json;
    }
    return {
        
        'category': json['category'] == null ? undefined : ReleaseDateCategoryFromJSON(json['category']),
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'human': json['human'] == null ? undefined : json['human'],
        'id': json['id'] == null ? undefined : json['id'],
        'month': json['month'] == null ? undefined : json['month'],
        'platformVersion': json['platformVersion'] == null ? undefined : PlatformVersionIdentityOrValueFromJSON(json['platformVersion']),
        'region': json['region'] == null ? undefined : ReleaseDateRegionFromJSON(json['region']),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'year': json['year'] == null ? undefined : json['year'],
    };
}

export function PlatformVersionReleaseDateToJSON(json: any): PlatformVersionReleaseDate {
    return PlatformVersionReleaseDateToJSONTyped(json, false);
}

export function PlatformVersionReleaseDateToJSONTyped(value?: PlatformVersionReleaseDate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'category': ReleaseDateCategoryToJSON(value['category']),
        'checksum': value['checksum'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'date': value['date'] == null ? undefined : ((value['date'] as any).toISOString()),
        'human': value['human'],
        'id': value['id'],
        'month': value['month'],
        'platformVersion': PlatformVersionIdentityOrValueToJSON(value['platformVersion']),
        'region': ReleaseDateRegionToJSON(value['region']),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
        'year': value['year'],
    };
}

