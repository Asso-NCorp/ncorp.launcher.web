/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CompanyIdentityOrValue } from './CompanyIdentityOrValue';
import {
    CompanyIdentityOrValueFromJSON,
    CompanyIdentityOrValueFromJSONTyped,
    CompanyIdentityOrValueToJSON,
    CompanyIdentityOrValueToJSONTyped,
} from './CompanyIdentityOrValue';
import type { GameIdentityOrValue } from './GameIdentityOrValue';
import {
    GameIdentityOrValueFromJSON,
    GameIdentityOrValueFromJSONTyped,
    GameIdentityOrValueToJSON,
    GameIdentityOrValueToJSONTyped,
} from './GameIdentityOrValue';

/**
 * 
 * @export
 * @interface InvolvedCompany
 */
export interface InvolvedCompany {
    /**
     * 
     * @type {string}
     * @memberof InvolvedCompany
     */
    checksum?: string | null;
    /**
     * 
     * @type {CompanyIdentityOrValue}
     * @memberof InvolvedCompany
     */
    company?: CompanyIdentityOrValue | null;
    /**
     * 
     * @type {Date}
     * @memberof InvolvedCompany
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof InvolvedCompany
     */
    developer?: boolean | null;
    /**
     * 
     * @type {GameIdentityOrValue}
     * @memberof InvolvedCompany
     */
    game?: GameIdentityOrValue | null;
    /**
     * 
     * @type {number}
     * @memberof InvolvedCompany
     */
    id?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof InvolvedCompany
     */
    porting?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof InvolvedCompany
     */
    publisher?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof InvolvedCompany
     */
    supporting?: boolean | null;
    /**
     * 
     * @type {Date}
     * @memberof InvolvedCompany
     */
    updatedAt?: Date | null;
}

/**
 * Check if a given object implements the InvolvedCompany interface.
 */
export function instanceOfInvolvedCompany(value: object): value is InvolvedCompany {
    return true;
}

export function InvolvedCompanyFromJSON(json: any): InvolvedCompany {
    return InvolvedCompanyFromJSONTyped(json, false);
}

export function InvolvedCompanyFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvolvedCompany {
    if (json == null) {
        return json;
    }
    return {
        
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'company': json['company'] == null ? undefined : CompanyIdentityOrValueFromJSON(json['company']),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'developer': json['developer'] == null ? undefined : json['developer'],
        'game': json['game'] == null ? undefined : GameIdentityOrValueFromJSON(json['game']),
        'id': json['id'] == null ? undefined : json['id'],
        'porting': json['porting'] == null ? undefined : json['porting'],
        'publisher': json['publisher'] == null ? undefined : json['publisher'],
        'supporting': json['supporting'] == null ? undefined : json['supporting'],
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function InvolvedCompanyToJSON(json: any): InvolvedCompany {
    return InvolvedCompanyToJSONTyped(json, false);
}

export function InvolvedCompanyToJSONTyped(value?: InvolvedCompany | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'checksum': value['checksum'],
        'company': CompanyIdentityOrValueToJSON(value['company']),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'developer': value['developer'],
        'game': GameIdentityOrValueToJSON(value['game']),
        'id': value['id'],
        'porting': value['porting'],
        'publisher': value['publisher'],
        'supporting': value['supporting'],
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
    };
}

