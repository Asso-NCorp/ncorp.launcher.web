/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AlternativeName } from './AlternativeName';
import {
    AlternativeNameFromJSON,
    AlternativeNameFromJSONTyped,
    AlternativeNameToJSON,
    AlternativeNameToJSONTyped,
} from './AlternativeName';

/**
 * 
 * @export
 * @interface AlternativeNameIdentitiesOrValues
 */
export interface AlternativeNameIdentitiesOrValues {
    /**
     * 
     * @type {Array<number>}
     * @memberof AlternativeNameIdentitiesOrValues
     */
    readonly ids?: Array<number> | null;
    /**
     * 
     * @type {Array<AlternativeName>}
     * @memberof AlternativeNameIdentitiesOrValues
     */
    readonly values?: Array<AlternativeName> | null;
}

/**
 * Check if a given object implements the AlternativeNameIdentitiesOrValues interface.
 */
export function instanceOfAlternativeNameIdentitiesOrValues(value: object): value is AlternativeNameIdentitiesOrValues {
    return true;
}

export function AlternativeNameIdentitiesOrValuesFromJSON(json: any): AlternativeNameIdentitiesOrValues {
    return AlternativeNameIdentitiesOrValuesFromJSONTyped(json, false);
}

export function AlternativeNameIdentitiesOrValuesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlternativeNameIdentitiesOrValues {
    if (json == null) {
        return json;
    }
    return {
        
        'ids': json['ids'] == null ? undefined : json['ids'],
        'values': json['values'] == null ? undefined : ((json['values'] as Array<any>).map(AlternativeNameFromJSON)),
    };
}

export function AlternativeNameIdentitiesOrValuesToJSON(json: any): AlternativeNameIdentitiesOrValues {
    return AlternativeNameIdentitiesOrValuesToJSONTyped(json, false);
}

export function AlternativeNameIdentitiesOrValuesToJSONTyped(value?: Omit<AlternativeNameIdentitiesOrValues, 'ids'|'values'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

