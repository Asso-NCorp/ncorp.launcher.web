/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CompanyIdentityOrValue } from './CompanyIdentityOrValue';
import {
    CompanyIdentityOrValueFromJSON,
    CompanyIdentityOrValueFromJSONTyped,
    CompanyIdentityOrValueToJSON,
    CompanyIdentityOrValueToJSONTyped,
} from './CompanyIdentityOrValue';

/**
 * 
 * @export
 * @interface PlatformVersionCompany
 */
export interface PlatformVersionCompany {
    /**
     * 
     * @type {string}
     * @memberof PlatformVersionCompany
     */
    checksum?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlatformVersionCompany
     */
    comment?: string | null;
    /**
     * 
     * @type {CompanyIdentityOrValue}
     * @memberof PlatformVersionCompany
     */
    company?: CompanyIdentityOrValue | null;
    /**
     * 
     * @type {boolean}
     * @memberof PlatformVersionCompany
     */
    developer?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof PlatformVersionCompany
     */
    id?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof PlatformVersionCompany
     */
    manufacturer?: boolean | null;
}

/**
 * Check if a given object implements the PlatformVersionCompany interface.
 */
export function instanceOfPlatformVersionCompany(value: object): value is PlatformVersionCompany {
    return true;
}

export function PlatformVersionCompanyFromJSON(json: any): PlatformVersionCompany {
    return PlatformVersionCompanyFromJSONTyped(json, false);
}

export function PlatformVersionCompanyFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformVersionCompany {
    if (json == null) {
        return json;
    }
    return {
        
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'company': json['company'] == null ? undefined : CompanyIdentityOrValueFromJSON(json['company']),
        'developer': json['developer'] == null ? undefined : json['developer'],
        'id': json['id'] == null ? undefined : json['id'],
        'manufacturer': json['manufacturer'] == null ? undefined : json['manufacturer'],
    };
}

export function PlatformVersionCompanyToJSON(json: any): PlatformVersionCompany {
    return PlatformVersionCompanyToJSONTyped(json, false);
}

export function PlatformVersionCompanyToJSONTyped(value?: PlatformVersionCompany | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'checksum': value['checksum'],
        'comment': value['comment'],
        'company': CompanyIdentityOrValueToJSON(value['company']),
        'developer': value['developer'],
        'id': value['id'],
        'manufacturer': value['manufacturer'],
    };
}

