/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Agent.App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GPUInfos } from './GPUInfos';
import {
    GPUInfosFromJSON,
    GPUInfosFromJSONTyped,
    GPUInfosToJSON,
    GPUInfosToJSONTyped,
} from './GPUInfos';
import type { CPUInfos } from './CPUInfos';
import {
    CPUInfosFromJSON,
    CPUInfosFromJSONTyped,
    CPUInfosToJSON,
    CPUInfosToJSONTyped,
} from './CPUInfos';
import type { HardDriveInfo } from './HardDriveInfo';
import {
    HardDriveInfoFromJSON,
    HardDriveInfoFromJSONTyped,
    HardDriveInfoToJSON,
    HardDriveInfoToJSONTyped,
} from './HardDriveInfo';

/**
 * 
 * @export
 * @interface PhysicalDevices
 */
export interface PhysicalDevices {
    /**
     * 
     * @type {Array<HardDriveInfo>}
     * @memberof PhysicalDevices
     */
    hardDrives?: Array<HardDriveInfo>;
    /**
     * 
     * @type {Array<GPUInfos>}
     * @memberof PhysicalDevices
     */
    gpUs?: Array<GPUInfos>;
    /**
     * 
     * @type {CPUInfos}
     * @memberof PhysicalDevices
     */
    cpu?: CPUInfos;
}

/**
 * Check if a given object implements the PhysicalDevices interface.
 */
export function instanceOfPhysicalDevices(value: object): value is PhysicalDevices {
    return true;
}

export function PhysicalDevicesFromJSON(json: any): PhysicalDevices {
    return PhysicalDevicesFromJSONTyped(json, false);
}

export function PhysicalDevicesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhysicalDevices {
    if (json == null) {
        return json;
    }
    return {
        
        'hardDrives': json['hardDrives'] == null ? undefined : ((json['hardDrives'] as Array<any>).map(HardDriveInfoFromJSON)),
        'gpUs': json['gpUs'] == null ? undefined : ((json['gpUs'] as Array<any>).map(GPUInfosFromJSON)),
        'cpu': json['cpu'] == null ? undefined : CPUInfosFromJSON(json['cpu']),
    };
}

export function PhysicalDevicesToJSON(json: any): PhysicalDevices {
    return PhysicalDevicesToJSONTyped(json, false);
}

export function PhysicalDevicesToJSONTyped(value?: PhysicalDevices | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'hardDrives': value['hardDrives'] == null ? undefined : ((value['hardDrives'] as Array<any>).map(HardDriveInfoToJSON)),
        'gpUs': value['gpUs'] == null ? undefined : ((value['gpUs'] as Array<any>).map(GPUInfosToJSON)),
        'cpu': CPUInfosToJSON(value['cpu']),
    };
}

