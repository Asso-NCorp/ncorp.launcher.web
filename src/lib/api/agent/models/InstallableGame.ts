/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Agent.App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InstallableGame
 */
export interface InstallableGame {
    /**
     * 
     * @type {number}
     * @memberof InstallableGame
     */
    sizeGb?: number;
    /**
     * 
     * @type {string}
     * @memberof InstallableGame
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof InstallableGame
     */
    folderSlug?: string;
    /**
     * 
     * @type {string}
     * @memberof InstallableGame
     */
    version?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof InstallableGame
     */
    genres?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof InstallableGame
     */
    readonly genresStr?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof InstallableGame
     */
    platforms?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof InstallableGame
     */
    gameModes?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof InstallableGame
     */
    isFeatured?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof InstallableGame
     */
    dateUpdated?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof InstallableGame
     */
    dateAdded?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof InstallableGame
     */
    editorName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InstallableGame
     */
    mainProcessName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InstallableGame
     */
    cover?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InstallableGame
     */
    logo?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof InstallableGame
     */
    screenshots?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof InstallableGame
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof InstallableGame
     */
    startCommand?: string | null;
    /**
     * 
     * @type {number}
     * @memberof InstallableGame
     */
    maxPlayers?: number;
    /**
     * 
     * @type {boolean}
     * @memberof InstallableGame
     */
    useNotifications?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof InstallableGame
     */
    isCompressedAvailable?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof InstallableGame
     */
    isInstalled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof InstallableGame
     */
    isPlaying?: boolean;
}

/**
 * Check if a given object implements the InstallableGame interface.
 */
export function instanceOfInstallableGame(value: object): value is InstallableGame {
    return true;
}

export function InstallableGameFromJSON(json: any): InstallableGame {
    return InstallableGameFromJSONTyped(json, false);
}

export function InstallableGameFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstallableGame {
    if (json == null) {
        return json;
    }
    return {
        
        'sizeGb': json['sizeGb'] == null ? undefined : json['sizeGb'],
        'title': json['title'] == null ? undefined : json['title'],
        'folderSlug': json['folderSlug'] == null ? undefined : json['folderSlug'],
        'version': json['version'] == null ? undefined : json['version'],
        'genres': json['genres'] == null ? undefined : json['genres'],
        'genresStr': json['genresStr'] == null ? undefined : json['genresStr'],
        'platforms': json['platforms'] == null ? undefined : json['platforms'],
        'gameModes': json['gameModes'] == null ? undefined : json['gameModes'],
        'isFeatured': json['isFeatured'] == null ? undefined : json['isFeatured'],
        'dateUpdated': json['dateUpdated'] == null ? undefined : (new Date(json['dateUpdated'])),
        'dateAdded': json['dateAdded'] == null ? undefined : (new Date(json['dateAdded'])),
        'editorName': json['editorName'] == null ? undefined : json['editorName'],
        'mainProcessName': json['mainProcessName'] == null ? undefined : json['mainProcessName'],
        'cover': json['cover'] == null ? undefined : json['cover'],
        'logo': json['logo'] == null ? undefined : json['logo'],
        'screenshots': json['screenshots'] == null ? undefined : json['screenshots'],
        'description': json['description'] == null ? undefined : json['description'],
        'startCommand': json['startCommand'] == null ? undefined : json['startCommand'],
        'maxPlayers': json['maxPlayers'] == null ? undefined : json['maxPlayers'],
        'useNotifications': json['useNotifications'] == null ? undefined : json['useNotifications'],
        'isCompressedAvailable': json['isCompressedAvailable'] == null ? undefined : json['isCompressedAvailable'],
        'isInstalled': json['isInstalled'] == null ? undefined : json['isInstalled'],
        'isPlaying': json['isPlaying'] == null ? undefined : json['isPlaying'],
    };
}

export function InstallableGameToJSON(json: any): InstallableGame {
    return InstallableGameToJSONTyped(json, false);
}

export function InstallableGameToJSONTyped(value?: Omit<InstallableGame, 'genresStr'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sizeGb': value['sizeGb'],
        'title': value['title'],
        'folderSlug': value['folderSlug'],
        'version': value['version'],
        'genres': value['genres'],
        'platforms': value['platforms'],
        'gameModes': value['gameModes'],
        'isFeatured': value['isFeatured'],
        'dateUpdated': value['dateUpdated'] == null ? undefined : ((value['dateUpdated'] as any).toISOString().substring(0,10)),
        'dateAdded': value['dateAdded'] == null ? undefined : ((value['dateAdded'] as any).toISOString().substring(0,10)),
        'editorName': value['editorName'],
        'mainProcessName': value['mainProcessName'],
        'cover': value['cover'],
        'logo': value['logo'],
        'screenshots': value['screenshots'],
        'description': value['description'],
        'startCommand': value['startCommand'],
        'maxPlayers': value['maxPlayers'],
        'useNotifications': value['useNotifications'],
        'isCompressedAvailable': value['isCompressedAvailable'],
        'isInstalled': value['isInstalled'],
        'isPlaying': value['isPlaying'],
    };
}

