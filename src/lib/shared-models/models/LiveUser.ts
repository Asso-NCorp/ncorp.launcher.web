/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserActivity } from './UserActivity';
import {
    UserActivityFromJSON,
    UserActivityFromJSONTyped,
    UserActivityToJSON,
    UserActivityToJSONTyped,
} from './UserActivity';
import type { UserConnectionType } from './UserConnectionType';
import {
    UserConnectionTypeFromJSON,
    UserConnectionTypeFromJSONTyped,
    UserConnectionTypeToJSON,
    UserConnectionTypeToJSONTyped,
} from './UserConnectionType';

/**
 * 
 * @export
 * @interface LiveUser
 */
export interface LiveUser {
    /**
     * 
     * @type {string}
     * @memberof LiveUser
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof LiveUser
     */
    connectionId?: string;
    /**
     * 
     * @type {string}
     * @memberof LiveUser
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof LiveUser
     */
    image?: string;
    /**
     * 
     * @type {string}
     * @memberof LiveUser
     */
    role?: string;
    /**
     * 
     * @type {UserActivity}
     * @memberof LiveUser
     */
    activity?: UserActivity;
    /**
     * 
     * @type {boolean}
     * @memberof LiveUser
     */
    isSpeaking?: boolean;
    /**
     * 
     * @type {UserConnectionType}
     * @memberof LiveUser
     */
    status?: UserConnectionType;
    /**
     * 
     * @type {number}
     * @memberof LiveUser
     */
    gameInstallProgress?: number;
    /**
     * 
     * @type {string}
     * @memberof LiveUser
     */
    agentVersion?: string;
}



/**
 * Check if a given object implements the LiveUser interface.
 */
export function instanceOfLiveUser(value: object): value is LiveUser {
    return true;
}

export function LiveUserFromJSON(json: any): LiveUser {
    return LiveUserFromJSONTyped(json, false);
}

export function LiveUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveUser {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'connectionId': json['connectionId'] == null ? undefined : json['connectionId'],
        'name': json['name'] == null ? undefined : json['name'],
        'image': json['image'] == null ? undefined : json['image'],
        'role': json['role'] == null ? undefined : json['role'],
        'activity': json['activity'] == null ? undefined : UserActivityFromJSON(json['activity']),
        'isSpeaking': json['isSpeaking'] == null ? undefined : json['isSpeaking'],
        'status': json['status'] == null ? undefined : UserConnectionTypeFromJSON(json['status']),
        'gameInstallProgress': json['gameInstallProgress'] == null ? undefined : json['gameInstallProgress'],
        'agentVersion': json['agentVersion'] == null ? undefined : json['agentVersion'],
    };
}

export function LiveUserToJSON(json: any): LiveUser {
    return LiveUserToJSONTyped(json, false);
}

export function LiveUserToJSONTyped(value?: LiveUser | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'connectionId': value['connectionId'],
        'name': value['name'],
        'image': value['image'],
        'role': value['role'],
        'activity': UserActivityToJSON(value['activity']),
        'isSpeaking': value['isSpeaking'],
        'status': UserConnectionTypeToJSON(value['status']),
        'gameInstallProgress': value['gameInstallProgress'],
        'agentVersion': value['agentVersion'],
    };
}

