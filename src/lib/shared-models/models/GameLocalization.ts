/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoverIdentityOrValue } from './CoverIdentityOrValue';
import {
    CoverIdentityOrValueFromJSON,
    CoverIdentityOrValueFromJSONTyped,
    CoverIdentityOrValueToJSON,
    CoverIdentityOrValueToJSONTyped,
} from './CoverIdentityOrValue';
import type { RegionIdentityOrValue } from './RegionIdentityOrValue';
import {
    RegionIdentityOrValueFromJSON,
    RegionIdentityOrValueFromJSONTyped,
    RegionIdentityOrValueToJSON,
    RegionIdentityOrValueToJSONTyped,
} from './RegionIdentityOrValue';
import type { GameIdentityOrValue } from './GameIdentityOrValue';
import {
    GameIdentityOrValueFromJSON,
    GameIdentityOrValueFromJSONTyped,
    GameIdentityOrValueToJSON,
    GameIdentityOrValueToJSONTyped,
} from './GameIdentityOrValue';

/**
 * 
 * @export
 * @interface GameLocalization
 */
export interface GameLocalization {
    /**
     * 
     * @type {string}
     * @memberof GameLocalization
     */
    checksum?: string | null;
    /**
     * 
     * @type {CoverIdentityOrValue}
     * @memberof GameLocalization
     */
    cover?: CoverIdentityOrValue | null;
    /**
     * 
     * @type {Date}
     * @memberof GameLocalization
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {GameIdentityOrValue}
     * @memberof GameLocalization
     */
    game?: GameIdentityOrValue | null;
    /**
     * 
     * @type {number}
     * @memberof GameLocalization
     */
    id?: number | null;
    /**
     * 
     * @type {string}
     * @memberof GameLocalization
     */
    name?: string | null;
    /**
     * 
     * @type {RegionIdentityOrValue}
     * @memberof GameLocalization
     */
    region?: RegionIdentityOrValue | null;
    /**
     * 
     * @type {Date}
     * @memberof GameLocalization
     */
    updatedAt?: Date | null;
}

/**
 * Check if a given object implements the GameLocalization interface.
 */
export function instanceOfGameLocalization(value: object): value is GameLocalization {
    return true;
}

export function GameLocalizationFromJSON(json: any): GameLocalization {
    return GameLocalizationFromJSONTyped(json, false);
}

export function GameLocalizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameLocalization {
    if (json == null) {
        return json;
    }
    return {
        
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'cover': json['cover'] == null ? undefined : CoverIdentityOrValueFromJSON(json['cover']),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'game': json['game'] == null ? undefined : GameIdentityOrValueFromJSON(json['game']),
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'region': json['region'] == null ? undefined : RegionIdentityOrValueFromJSON(json['region']),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function GameLocalizationToJSON(json: any): GameLocalization {
    return GameLocalizationToJSONTyped(json, false);
}

export function GameLocalizationToJSONTyped(value?: GameLocalization | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'checksum': value['checksum'],
        'cover': CoverIdentityOrValueToJSON(value['cover']),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'game': GameIdentityOrValueToJSON(value['game']),
        'id': value['id'],
        'name': value['name'],
        'region': RegionIdentityOrValueToJSON(value['region']),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
    };
}

