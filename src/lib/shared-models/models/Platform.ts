/* tslint:disable */
/* eslint-disable */
/**
 * NCorp.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlatformLogoIdentityOrValue } from './PlatformLogoIdentityOrValue';
import {
    PlatformLogoIdentityOrValueFromJSON,
    PlatformLogoIdentityOrValueFromJSONTyped,
    PlatformLogoIdentityOrValueToJSON,
    PlatformLogoIdentityOrValueToJSONTyped,
} from './PlatformLogoIdentityOrValue';
import type { PlatformVersionIdentitiesOrValues } from './PlatformVersionIdentitiesOrValues';
import {
    PlatformVersionIdentitiesOrValuesFromJSON,
    PlatformVersionIdentitiesOrValuesFromJSONTyped,
    PlatformVersionIdentitiesOrValuesToJSON,
    PlatformVersionIdentitiesOrValuesToJSONTyped,
} from './PlatformVersionIdentitiesOrValues';
import type { PlatformWebsiteIdentitiesOrValues } from './PlatformWebsiteIdentitiesOrValues';
import {
    PlatformWebsiteIdentitiesOrValuesFromJSON,
    PlatformWebsiteIdentitiesOrValuesFromJSONTyped,
    PlatformWebsiteIdentitiesOrValuesToJSON,
    PlatformWebsiteIdentitiesOrValuesToJSONTyped,
} from './PlatformWebsiteIdentitiesOrValues';
import type { PlatformCategory } from './PlatformCategory';
import {
    PlatformCategoryFromJSON,
    PlatformCategoryFromJSONTyped,
    PlatformCategoryToJSON,
    PlatformCategoryToJSONTyped,
} from './PlatformCategory';
import type { PlatformFamilyIdentityOrValue } from './PlatformFamilyIdentityOrValue';
import {
    PlatformFamilyIdentityOrValueFromJSON,
    PlatformFamilyIdentityOrValueFromJSONTyped,
    PlatformFamilyIdentityOrValueToJSON,
    PlatformFamilyIdentityOrValueToJSONTyped,
} from './PlatformFamilyIdentityOrValue';

/**
 * 
 * @export
 * @interface Platform
 */
export interface Platform {
    /**
     * 
     * @type {string}
     * @memberof Platform
     */
    abbreviation?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Platform
     */
    alternativeName?: string | null;
    /**
     * 
     * @type {PlatformCategory}
     * @memberof Platform
     */
    category?: PlatformCategory | null;
    /**
     * 
     * @type {string}
     * @memberof Platform
     */
    checksum?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Platform
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof Platform
     */
    generation?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Platform
     */
    id?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Platform
     */
    name?: string | null;
    /**
     * 
     * @type {PlatformFamilyIdentityOrValue}
     * @memberof Platform
     */
    platformFamily?: PlatformFamilyIdentityOrValue | null;
    /**
     * 
     * @type {PlatformLogoIdentityOrValue}
     * @memberof Platform
     */
    platformLogo?: PlatformLogoIdentityOrValue | null;
    /**
     * 
     * @type {string}
     * @memberof Platform
     */
    slug?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Platform
     */
    summary?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Platform
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Platform
     */
    url?: string | null;
    /**
     * 
     * @type {PlatformVersionIdentitiesOrValues}
     * @memberof Platform
     */
    versions?: PlatformVersionIdentitiesOrValues | null;
    /**
     * 
     * @type {PlatformWebsiteIdentitiesOrValues}
     * @memberof Platform
     */
    websites?: PlatformWebsiteIdentitiesOrValues | null;
}



/**
 * Check if a given object implements the Platform interface.
 */
export function instanceOfPlatform(value: object): value is Platform {
    return true;
}

export function PlatformFromJSON(json: any): Platform {
    return PlatformFromJSONTyped(json, false);
}

export function PlatformFromJSONTyped(json: any, ignoreDiscriminator: boolean): Platform {
    if (json == null) {
        return json;
    }
    return {
        
        'abbreviation': json['abbreviation'] == null ? undefined : json['abbreviation'],
        'alternativeName': json['alternativeName'] == null ? undefined : json['alternativeName'],
        'category': json['category'] == null ? undefined : PlatformCategoryFromJSON(json['category']),
        'checksum': json['checksum'] == null ? undefined : json['checksum'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'generation': json['generation'] == null ? undefined : json['generation'],
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'platformFamily': json['platformFamily'] == null ? undefined : PlatformFamilyIdentityOrValueFromJSON(json['platformFamily']),
        'platformLogo': json['platformLogo'] == null ? undefined : PlatformLogoIdentityOrValueFromJSON(json['platformLogo']),
        'slug': json['slug'] == null ? undefined : json['slug'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'url': json['url'] == null ? undefined : json['url'],
        'versions': json['versions'] == null ? undefined : PlatformVersionIdentitiesOrValuesFromJSON(json['versions']),
        'websites': json['websites'] == null ? undefined : PlatformWebsiteIdentitiesOrValuesFromJSON(json['websites']),
    };
}

export function PlatformToJSON(json: any): Platform {
    return PlatformToJSONTyped(json, false);
}

export function PlatformToJSONTyped(value?: Platform | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'abbreviation': value['abbreviation'],
        'alternativeName': value['alternativeName'],
        'category': PlatformCategoryToJSON(value['category']),
        'checksum': value['checksum'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'generation': value['generation'],
        'id': value['id'],
        'name': value['name'],
        'platformFamily': PlatformFamilyIdentityOrValueToJSON(value['platformFamily']),
        'platformLogo': PlatformLogoIdentityOrValueToJSON(value['platformLogo']),
        'slug': value['slug'],
        'summary': value['summary'],
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
        'url': value['url'],
        'versions': PlatformVersionIdentitiesOrValuesToJSON(value['versions']),
        'websites': PlatformWebsiteIdentitiesOrValuesToJSON(value['websites']),
    };
}

